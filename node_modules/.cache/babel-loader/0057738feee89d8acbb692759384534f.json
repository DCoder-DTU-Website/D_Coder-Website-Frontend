{"ast":null,"code":"var _jsxFileName = \"/home/vaibhav/Documents/Development/D_Coder-Website-Frontend/src/components/PhotoGallery/photoindex.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport Gallery from \"react-photo-gallery\"; // import { photos } from \"./photos\";\n\nimport { Modal, ModalGateway } from \"react-images\";\nimport CoverFlow from \"../Gallery/coverFlow\";\nimport api from \"../../api/apiClient\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PhotoIndex() {\n  _s();\n\n  const [currentImage, setCurrentImage] = useState(0);\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\n  const [photos, setPhotos] = useState([]);\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-device-width: 850px)\"\n  });\n  const isMobile = useMediaQuery({\n    query: \"(max-device-width: 850px)\"\n  });\n\n  const getPhotos = async () => {\n    try {\n      const images = await api.get(\"/gallery/all\");\n      const {\n        data: gallery\n      } = images.data;\n      const galleryImgs = gallery.map(image => ({\n        src: image.image,\n        width: 5,\n        height: 5,\n        title: image.title\n      }));\n      setPhotos(galleryImgs);\n    } catch (err) {\n      console.error(err, \"Couldn't retrieve photos.\");\n    }\n  };\n\n  useEffect(() => {\n    getPhotos();\n  }, []);\n  const openLightbox = useCallback((event, {\n    photo,\n    index\n  }) => {\n    setCurrentImage(index);\n    setViewerIsOpen(true);\n    alert(\"Press Esc To Exit\");\n  }, []);\n\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setViewerIsOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"10%\",\n      // backgroundColor:\"rgb(26,32,44)\",\n      marginLeft: \"-35px\",\n      marginRight: \"-35px\",\n      marginBottom: \"-35px\"\n    },\n    children: [isDesktopOrLaptop && /*#__PURE__*/_jsxDEV(Gallery, {\n      photos: photos,\n      onClick: openLightbox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }, this), isMobile && /*#__PURE__*/_jsxDEV(Gallery, {\n      photos: photos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(ModalGateway, {\n      children: viewerIsOpen ? /*#__PURE__*/_jsxDEV(Modal, {\n        onClose: closeLightbox,\n        children: /*#__PURE__*/_jsxDEV(CoverFlow, {\n          slideIndex: currentImage,\n          slides: photos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PhotoIndex, \"VJRmojOktKIfvFqAoyecMlS/bSA=\", false, function () {\n  return [useMediaQuery, useMediaQuery];\n});\n\n_c = PhotoIndex;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoIndex\");","map":{"version":3,"sources":["/home/vaibhav/Documents/Development/D_Coder-Website-Frontend/src/components/PhotoGallery/photoindex.js"],"names":["React","useState","useCallback","useEffect","Gallery","Modal","ModalGateway","CoverFlow","api","useMediaQuery","PhotoIndex","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","photos","setPhotos","isDesktopOrLaptop","query","isMobile","getPhotos","images","get","data","gallery","galleryImgs","map","image","src","width","height","title","err","console","error","openLightbox","event","photo","index","alert","closeLightbox","padding","marginLeft","marginRight","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport Gallery from \"react-photo-gallery\";\n// import { photos } from \"./photos\";\nimport { Modal, ModalGateway } from \"react-images\";\nimport CoverFlow from \"../Gallery/coverFlow\";\nimport api from \"../../api/apiClient\";\nimport { useMediaQuery } from \"react-responsive\";\n\nexport default function PhotoIndex() {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\n  const [photos, setPhotos] = useState([]);\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-device-width: 850px)\",\n  });\n  const isMobile = useMediaQuery({\n    query: \"(max-device-width: 850px)\",\n  });\n\n  const getPhotos = async () => {\n    try {\n      const images = await api.get(\"/gallery/all\");\n      const { data: gallery } = images.data;\n      const galleryImgs = gallery.map((image) => ({\n        src: image.image,\n        width: 5,\n        height: 5,\n        title: image.title,\n      }));\n      setPhotos(galleryImgs);\n    } catch (err) {\n      console.error(err, \"Couldn't retrieve photos.\");\n    }\n  };\n\n  useEffect(() => {\n    getPhotos();\n  }, []);\n\n  const openLightbox = useCallback((event, { photo, index }) => {\n    setCurrentImage(index);\n    setViewerIsOpen(true);\n    alert(\"Press Esc To Exit\");\n  }, []);\n\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setViewerIsOpen(false);\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"10%\",\n        // backgroundColor:\"rgb(26,32,44)\",\n        marginLeft: \"-35px\",\n        marginRight: \"-35px\",\n        marginBottom: \"-35px\",\n      }}\n    >\n      {isDesktopOrLaptop && <Gallery photos={photos} onClick={openLightbox} />}\n      {isMobile && <Gallery photos={photos} />}\n      {/* <Gallery photos={photos}  onClick={openLightbox} /> */}\n      <ModalGateway>\n        {viewerIsOpen ? (\n          <Modal onClose={closeLightbox}>\n            <CoverFlow slideIndex={currentImage} slides={photos} />\n          </Modal>\n        ) : null}\n      </ModalGateway>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}