{"ast":null,"code":"var _jsxFileName = \"/home/vaibhav/Documents/Development/D_Coder-Website-Frontend/src/helpers/library.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport styled from \"styled-components\";\nimport Header, { NavLink, NavLinks, LogoLink, NavToggle, DesktopNavLinks } from \"../components/headers/light.js\";\nimport Login from \"./loginModal\";\nimport { Button, IconButton } from \"@material-ui/core\";\nimport useUser from \"../useUser\";\nimport { BrowserRouter, Link } from \"react-router-dom\";\nimport { Avatar } from \"@material-ui/core\";\nimport swal from \"sweetalert\";\nimport api from \"../api/apiClient\";\nimport MenuDropdown from \"components/hero/MenuDropdown.js\";\nimport { ExitToApp } from \"@material-ui/icons\";\nimport \"./NavBarStyling.css\";\nimport PowerSettingsNewRoundedIcon from \"@material-ui/icons/PowerSettingsNewRounded\";\nimport SecurityRoundedIcon from \"@material-ui/icons/SecurityRounded\";\nimport DropNav from \"./navBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledHeader = styled(Header)`\n  ${{\n  \"paddingTop\": \"2rem\",\n  \"paddingBottom\": \"0.5rem\",\n  \"maxWidth\": \"none\",\n  \"width\": \"100%\"\n}}\n  ${DesktopNavLinks} ${NavLink}, ${LogoLink} {\n    ${{\n  \"--text-opacity\": \"1\",\n  \"color\": \"rgba(247, 250, 252, var(--text-opacity))\",\n  \":hover\": {\n    \"--border-opacity\": \"1\",\n    \"borderColor\": \"rgba(226, 232, 240, var(--border-opacity))\",\n    \"--text-opacity\": \"1\",\n    \"color\": \"rgba(226, 232, 240, var(--text-opacity))\"\n  }\n}}\n  }\n  ${NavToggle}.closed {\n    ${{\n  \"--text-opacity\": \"1\",\n  \"color\": \"rgba(247, 250, 252, var(--text-opacity))\",\n  \":hover\": {\n    \"--text-opacity\": \"1\",\n    \"color\": \"rgba(66, 153, 225, var(--text-opacity))\"\n  }\n}}\n  }\n`;\n_c = StyledHeader;\n\nfunction NavBar() {\n  _s();\n\n  const {\n    user,\n    logout\n  } = useUser();\n  const [isLoggedIn, setIsLoggedIn] = useState({\n    login: user\n  });\n  const [profile, setProfile] = useState(null);\n  useEffect(() => {\n    setIsLoggedIn({\n      login: user\n    });\n  }, [user]);\n\n  const logoutFromClient = () => {\n    logout();\n    setIsLoggedIn({\n      login: false\n    });\n    swal({\n      title: \"Successfully logged out!\",\n      icon: \"success\",\n      closeOnEsc: true,\n      closeOnClickOutside: true,\n      button: {\n        ok: \"Ok\"\n      }\n    });\n  };\n\n  const getProfile = async () => {\n    const res = await api.post(\"/userprofile\", {\n      user\n    });\n    const userProfile = res.data;\n    setProfile(userProfile);\n  };\n\n  useEffect(() => {\n    getProfile();\n  }, [user]);\n  useEffect(() => {\n    console.log(profile);\n  }, [profile]);\n  const isMobile = useMediaQuery({\n    query: \"(max-device-width: 1154px)\"\n  });\n  const navLinks = [/*#__PURE__*/_jsxDEV(DropNav, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(NavLinks, {\n    children: isLoggedIn.login ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isLoggedIn.login.isAdmin ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/admin/dashboard\",\n        children: /*#__PURE__*/_jsxDEV(SecurityRoundedIcon, {\n          className: \"NavBarIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginRight: \"-10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/admin/user\",\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: profile !== null && profile.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        variant: \"contained\",\n        onClick: () => {\n          swal({\n            title: \"Are you sure you want to logout?\",\n            icon: \"warning\",\n            buttons: {\n              yes: {\n                text: \"Yes\",\n                value: \"Yes\"\n              },\n              no: {\n                text: \"No\",\n                value: \"No\"\n              }\n            },\n            closeOnClickOutside: true,\n            closeOnEsc: true\n          }).then(value => {\n            switch (value) {\n              case \"Yes\":\n                logoutFromClient();\n                break;\n\n              case \"No\":\n                return;\n\n              default:\n                return;\n            }\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(PowerSettingsNewRoundedIcon, {\n          className: \"NavBarIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Login, {\n      setIsLoggedIn: setIsLoggedIn,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)\n  }, 2, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this)];\n  return /*#__PURE__*/_jsxDEV(StyledHeader, {\n    links: navLinks\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 10\n  }, this);\n}\n\n_s(NavBar, \"4VZzugntD0xbLV8ETYklJ0jjhfc=\", false, function () {\n  return [useUser, useMediaQuery];\n});\n\n_c2 = NavBar;\nexport default NavBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledHeader\");\n$RefreshReg$(_c2, \"NavBar\");","map":{"version":3,"sources":["/home/vaibhav/Documents/Development/D_Coder-Website-Frontend/src/helpers/library.js"],"names":["React","useState","useEffect","useMediaQuery","styled","Header","NavLink","NavLinks","LogoLink","NavToggle","DesktopNavLinks","Login","Button","IconButton","useUser","BrowserRouter","Link","Avatar","swal","api","MenuDropdown","ExitToApp","PowerSettingsNewRoundedIcon","SecurityRoundedIcon","DropNav","StyledHeader","NavBar","user","logout","isLoggedIn","setIsLoggedIn","login","profile","setProfile","logoutFromClient","title","icon","closeOnEsc","closeOnClickOutside","button","ok","getProfile","res","post","userProfile","data","console","log","isMobile","query","navLinks","isAdmin","marginRight","image","buttons","yes","text","value","no","then"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport Header, {\n  NavLink,\n  NavLinks,\n  LogoLink,\n  NavToggle,\n  DesktopNavLinks,\n} from \"../components/headers/light.js\";\nimport Login from \"./loginModal\";\nimport { Button, IconButton } from \"@material-ui/core\";\nimport useUser from \"../useUser\";\nimport { BrowserRouter, Link } from \"react-router-dom\";\nimport { Avatar } from \"@material-ui/core\";\nimport swal from \"sweetalert\";\nimport api from \"../api/apiClient\";\nimport MenuDropdown from \"components/hero/MenuDropdown.js\";\nimport { ExitToApp } from \"@material-ui/icons\";\nimport \"./NavBarStyling.css\";\nimport PowerSettingsNewRoundedIcon from \"@material-ui/icons/PowerSettingsNewRounded\";\nimport SecurityRoundedIcon from \"@material-ui/icons/SecurityRounded\";\nimport DropNav from \"./navBar\";\n\nconst StyledHeader = styled(Header)`\n  ${tw`pt-8 pb-2 max-w-none w-full`}\n  ${DesktopNavLinks} ${NavLink}, ${LogoLink} {\n    ${tw`text-gray-100 hover:border-gray-300 hover:text-gray-300`}\n  }\n  ${NavToggle}.closed {\n    ${tw`text-gray-100 hover:text-blue-500`}\n  }\n`;\n\nfunction NavBar() {\n  const { user, logout } = useUser();\n\n  const [isLoggedIn, setIsLoggedIn] = useState({ login: user });\n  const [profile, setProfile] = useState(null);\n\n  useEffect(() => {\n    setIsLoggedIn({ login: user });\n  }, [user]);\n\n  const logoutFromClient = () => {\n    logout();\n    setIsLoggedIn({ login: false });\n    swal({\n      title: \"Successfully logged out!\",\n      icon: \"success\",\n      closeOnEsc: true,\n      closeOnClickOutside: true,\n      button: {\n        ok: \"Ok\",\n      },\n    });\n  };\n\n  const getProfile = async () => {\n    const res = await api.post(\"/userprofile\", { user });\n    const userProfile = res.data;\n    setProfile(userProfile);\n  };\n\n  useEffect(() => {\n    getProfile();\n  }, [user]);\n\n  useEffect(() => {\n    console.log(profile);\n  }, [profile]);\n\n  const isMobile = useMediaQuery({\n    query: \"(max-device-width: 1154px)\",\n  });\n\n  const navLinks = [\n    <DropNav />,\n    <NavLinks key={2}>\n      {isLoggedIn.login ? (\n        <>\n          {isLoggedIn.login.isAdmin ? (\n            <Link to=\"/admin/dashboard\">\n              <SecurityRoundedIcon className=\"NavBarIcon\" />\n            </Link>\n          ) : (\n            <Button style={{marginRight:\"-10px\"}}>\n              {/* <BrowserRouter forceRefresh={true}> */}\n              <Link to=\"/admin/user\">\n                <Avatar src={profile !== null && profile.image}></Avatar>\n              </Link>\n              {/* </BrowserRouter> */}\n            </Button>\n          )}\n          <IconButton\n            variant=\"contained\"\n            onClick={() => {\n              swal({\n                title: \"Are you sure you want to logout?\",\n                icon: \"warning\",\n                buttons: {\n                  yes: {\n                    text: \"Yes\",\n                    value: \"Yes\",\n                  },\n                  no: {\n                    text: \"No\",\n                    value: \"No\",\n                  },\n                },\n                closeOnClickOutside: true,\n                closeOnEsc: true,\n              }).then((value) => {\n                switch (value) {\n                  case \"Yes\":\n                    logoutFromClient();\n                    break;\n                  case \"No\":\n                    return;\n                  default:\n                    return;\n                }\n              });\n            }}\n          >\n            <PowerSettingsNewRoundedIcon className=\"NavBarIcon\" />\n          </IconButton>\n        </>\n      ) : (\n        <Login setIsLoggedIn={setIsLoggedIn}>Login</Login>\n      )}\n    </NavLinks>,\n  ];\n\n  return <StyledHeader links={navLinks} />;\n}\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}