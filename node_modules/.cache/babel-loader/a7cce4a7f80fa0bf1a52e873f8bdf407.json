{"ast":null,"code":"var _jsxFileName = \"/home/vaibhav/Documents/Development/D_Coder-Website-Frontend/src/pages/RecruitmentProcess/components/tablelist/Scheduled.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport api from \"../../../../api/apiClient\";\nimport swal from \"sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\nconst rows = [{\n  name: \"Aditya\",\n  email: 159,\n  status: \"Applied\"\n}, {\n  name: \"Vaibhav\",\n  email: 237,\n  status: \"Applied\"\n}, {\n  name: \"Naman\",\n  email: 262,\n  status: \"Applied\"\n}, {\n  name: \"Aarya\",\n  email: 305,\n  status: \"Applied\"\n}, {\n  name: \"Shivansh\",\n  email: 356,\n  status: \"Applied\"\n}];\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700\n  }\n});\nexport default function CustomizedTables() {\n  _s();\n\n  const classes = useStyles();\n  const [scheduled, setScheduled] = useState([]);\n\n  const getScheduled = async () => {\n    try {\n      const {\n        data\n      } = await api.get(\"/applicants/awaiting\"); // const { data: appliedData } = data;\n\n      console.log(data); // console.log(appliedData);\n\n      let val = data.filter(e => e.inteviewLink != \"\" && e.interviewCompleted == false);\n      console.log(val);\n      setScheduled(val); // setScheduled(data);\n    } catch (err) {\n      console.log(\"Could not retrieve Applicants List!\", err);\n    }\n  };\n\n  useEffect(() => {\n    getScheduled();\n  }, []);\n\n  const handleAccepted = applicant => {\n    //Change status to accept\n    applicant.isAccepted = true;\n    applicant.interviewCompleted = true;\n    console.log(applicant);\n    updateAcceptedBackend(applicant);\n  };\n\n  const updateAcceptedBackend = async data => {\n    const res = await api.post(`/applicants/accept/${data._id}`, {\n      data\n    });\n    swal({\n      title: res.data,\n      icon: \"success\"\n    });\n  };\n\n  const handleRejection = applicant => {\n    //Change status to rejection\n    applicant.isAccepted = false;\n    applicant.interviewCompleted = true;\n    console.log(applicant);\n    updateRejectedBackend(applicant);\n  };\n\n  const updateRejectedBackend = async data => {\n    const res = await api.post(`/applicants/reject/${data._id}`, {\n      data\n    });\n    swal({\n      title: res.data,\n      icon: \"success\"\n    });\n  };\n\n  const handleAcceptedHelper = async applicant => {\n    console.log(applicant);\n    const res = await swal({\n      title: \"Are you sure you want to accept this user?\",\n      icon: \"warning\",\n      buttons: {\n        Yes: {\n          text: \"Yes\",\n          value: \"Yes\"\n        },\n        No: {\n          text: \"No\",\n          value: \"No\"\n        }\n      }\n    });\n\n    if (res === \"Yes\") {\n      await handleAccepted(applicant);\n    } else {\n      return;\n    }\n  };\n\n  const handleRejectionHelper = async applicant => {\n    const res = await swal({\n      title: \"Are you sure you want to reject this user?\",\n      icon: \"warning\",\n      buttons: {\n        Yes: {\n          text: \"Yes\",\n          value: \"Yes\"\n        },\n        No: {\n          text: \"No\",\n          value: \"No\"\n        }\n      }\n    });\n\n    if (res === \"Yes\") {\n      await handleRejection(applicant);\n    } else {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"customized table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            children: \"Accepted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            children: \"Rejected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: scheduled.map(row => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            children: row.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            style: {\n              cursor: \"pointer\"\n            },\n            onClick: () => handleAcceptedHelper(row),\n            children: /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n              style: {\n                fill: \"green\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            style: {\n              cursor: \"pointer\"\n            },\n            onClick: () => handleRejectionHelper(row),\n            children: /*#__PURE__*/_jsxDEV(CancelIcon, {\n              style: {\n                fill: \"red\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, row.email, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomizedTables, \"TFB+FOGUvw2M3jMblkS8yCzTE7Y=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomizedTables;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomizedTables\");","map":{"version":3,"sources":["/home/vaibhav/Documents/Development/D_Coder-Website-Frontend/src/pages/RecruitmentProcess/components/tablelist/Scheduled.jsx"],"names":["React","useState","useEffect","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CheckBoxIcon","CancelIcon","api","swal","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","action","hover","rows","name","email","status","useStyles","table","minWidth","CustomizedTables","classes","scheduled","setScheduled","getScheduled","data","get","console","log","val","filter","e","inteviewLink","interviewCompleted","err","handleAccepted","applicant","isAccepted","updateAcceptedBackend","res","post","_id","title","icon","handleRejection","updateRejectedBackend","handleAcceptedHelper","buttons","Yes","text","value","No","handleRejectionHelper","map","row","cursor","fill"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport api from \"../../../../api/apiClient\";\nimport swal from \"sweetalert\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst rows = [\n  { name: \"Aditya\", email: 159, status: \"Applied\" },\n  { name: \"Vaibhav\", email: 237, status: \"Applied\" },\n  { name: \"Naman\", email: 262, status: \"Applied\" },\n  { name: \"Aarya\", email: 305, status: \"Applied\" },\n  { name: \"Shivansh\", email: 356, status: \"Applied\" },\n];\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function CustomizedTables() {\n  const classes = useStyles();\n  const [scheduled, setScheduled] = useState([]);\n\n  const getScheduled = async () => {\n    try {\n      const { data } = await api.get(\"/applicants/awaiting\");\n      // const { data: appliedData } = data;\n      console.log(data);\n      // console.log(appliedData);\n      let val = data.filter((e) => e.inteviewLink!=\"\" && e.interviewCompleted == false);\n      console.log(val)\n      setScheduled(val);\n      // setScheduled(data);\n    } catch (err) {\n      console.log(\"Could not retrieve Applicants List!\", err);\n    }\n  };\n  useEffect(() => {\n    getScheduled();\n  }, []);\n\n  const handleAccepted = (applicant) => {\n    //Change status to accept\n    applicant.isAccepted=true;\n    applicant.interviewCompleted=true;\n    console.log(applicant)\n    updateAcceptedBackend(applicant);\n  };\n\n      const updateAcceptedBackend = async (data) => {\n        const res = await api.post(`/applicants/accept/${data._id}`, { data });\n        swal({ title: res.data, icon: \"success\" });\n      };\n\n  const handleRejection = (applicant) => {\n    //Change status to rejection\n    applicant.isAccepted = false;\n    applicant.interviewCompleted = true;\n    console.log(applicant)\n    updateRejectedBackend(applicant);\n  };\n\n      const updateRejectedBackend = async (data) => {\n        const res = await api.post(`/applicants/reject/${data._id}`, { data });\n        swal({ title: res.data, icon: \"success\" });\n      };\n\n  const handleAcceptedHelper = async (applicant) => {\n    console.log(applicant);\n    const res = await swal({\n      title: \"Are you sure you want to accept this user?\",\n      icon: \"warning\",\n      buttons: {\n        Yes: {\n          text: \"Yes\",\n          value: \"Yes\",\n        },\n        No: {\n          text: \"No\",\n          value: \"No\",\n        },\n      },\n    });\n    if (res === \"Yes\") {\n      await handleAccepted(applicant);\n    } else {\n      return;\n    }\n  };\n\n  const handleRejectionHelper = async (applicant) => {\n    const res = await swal({\n      title: \"Are you sure you want to reject this user?\",\n      icon: \"warning\",\n      buttons: {\n        Yes: {\n          text: \"Yes\",\n          value: \"Yes\",\n        },\n        No: {\n          text: \"No\",\n          value: \"No\",\n        },\n      },\n    });\n    if (res === \"Yes\") {\n      await handleRejection(applicant);\n    } else {\n      return;\n    }\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Name</StyledTableCell>\n            <StyledTableCell align=\"right\">Email</StyledTableCell>\n            <StyledTableCell align=\"right\">Accepted</StyledTableCell>\n            <StyledTableCell align=\"right\">Rejected</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {scheduled.map((row) => (\n            <StyledTableRow key={row.email}>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">{row.email}</StyledTableCell>\n              <StyledTableCell\n                align=\"right\"\n                style={{ cursor: \"pointer\" }}\n                onClick={() => handleAcceptedHelper(row)}\n              >\n                <CheckBoxIcon style={{ fill: \"green\" }} />\n              </StyledTableCell>\n              <StyledTableCell\n                align=\"right\"\n                style={{ cursor: \"pointer\" }}\n                onClick={() => handleRejectionHelper(row)}\n              >\n                <CancelIcon style={{ fill: \"red\" }} />\n              </StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}