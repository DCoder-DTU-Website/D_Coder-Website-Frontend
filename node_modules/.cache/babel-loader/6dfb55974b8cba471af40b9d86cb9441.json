{"ast":null,"code":"var _jsxFileName = \"/home/vaibhav/Documents/Development/D_Coder-Website-Frontend/src/helpers/loginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { PrimaryButton as PrimaryButtonBase } from \"components/misc/Buttons.js\";\nimport api from \"../api/apiClient\";\nimport swal from \"sweetalert\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { FaUserAlt, FaLock } from \"react-icons/fa\";\nimport ForgotModal from \"./ForgotModal\";\nimport \"./loginForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().required().label(\"Username\").email(),\n  password: Yup.string().required().label(\"Password\")\n});\n\nconst AddForm = ({\n  handleClose,\n  setIsLoggedIn\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n\n  const login = async () => {\n    setLoading(true);\n\n    try {\n      const info = formik.values;\n      formik.resetForm();\n      const {\n        data\n      } = await api.post(\"/login\", {\n        email: info.email,\n        username: info.email,\n        password: info.password\n      });\n      localStorage.setItem(\"token\", data);\n      const res = await api.get(\"/user\");\n      setIsLoggedIn({\n        login: res.data\n      });\n\n      if (res.data.isAdmin) {\n        swal({\n          title: \"Welcome Admin!\",\n          icon: \"success\"\n        });\n      } else {\n        swal({\n          title: \"Successfully Logged In!\",\n          icon: \"success\"\n        });\n      }\n\n      window.location.reload();\n    } catch (err) {\n      swal({\n        title: \"Incorrect Username or Password!\",\n        icon: \"warning\"\n      });\n    }\n\n    setLoading(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema,\n    onSubmit: login\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"1em\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      method: \"POST\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"1em\",\n            display: \"flex\",\n            alignItems: \"center\",\n            position: \"relative\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(FaUserAlt, {\n            style: {\n              position: \"absolute\",\n              bottom: 10\n            },\n            color: formik.errors.email ? \"red\" : \"black\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Username\",\n            id: \"username\",\n            name: \"email\",\n            type: \"email\",\n            value: formik.values.email,\n            onChange: formik.handleChange,\n            error: formik.touched.email && Boolean(formik.errors.email),\n            helperText: formik.touched.email && formik.errors.email,\n            fullWidth: true,\n            style: {\n              marginLeft: \"25px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"1em\",\n            display: \"flex\",\n            alignItems: \"center\",\n            position: \"relative\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(FaLock, {\n            style: {\n              position: \"absolute\",\n              bottom: 10\n            },\n            color: formik.errors.password ? \"red\" : \"black\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password\",\n            id: \"password\",\n            name: \"password\",\n            type: \"password\",\n            value: formik.values.password,\n            onChange: formik.handleChange,\n            error: formik.touched.password && Boolean(formik.errors.password),\n            helperText: formik.touched.password && formik.errors.password,\n            fullWidth: true,\n            style: {\n              marginLeft: \"25px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ForgotModal, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          type: \"submit\",\n          className: \"login-btn\",\n          disabled: loading,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddForm, \"pJ87EHN1dfgLFfg5TTdXt1LPs8E=\", false, function () {\n  return [useFormik];\n});\n\n_c = AddForm;\nexport default AddForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddForm\");","map":{"version":3,"sources":["/home/vaibhav/Documents/Development/D_Coder-Website-Frontend/src/helpers/loginForm.js"],"names":["React","useState","styled","PrimaryButton","PrimaryButtonBase","api","swal","TextField","Button","useFormik","Yup","FaUserAlt","FaLock","ForgotModal","validationSchema","object","shape","email","string","required","label","password","AddForm","handleClose","setIsLoggedIn","loading","setLoading","login","info","formik","values","resetForm","data","post","username","localStorage","setItem","res","get","isAdmin","title","icon","window","location","reload","err","initialValues","onSubmit","margin","handleSubmit","display","flexDirection","justifyContent","alignItems","position","bottom","errors","handleChange","touched","Boolean","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport { PrimaryButton as PrimaryButtonBase } from \"components/misc/Buttons.js\";\nimport api from \"../api/apiClient\";\nimport swal from \"sweetalert\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { FaUserAlt, FaLock } from \"react-icons/fa\";\nimport ForgotModal from \"./ForgotModal\";\nimport \"./loginForm.css\";\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().required().label(\"Username\").email(),\n  password: Yup.string().required().label(\"Password\"),\n});\n\nconst AddForm = ({ handleClose, setIsLoggedIn }) => {\n  const [loading, setLoading] = useState(false);\n  const login = async () => {\n    setLoading(true);\n    try {\n      const info = formik.values;\n      formik.resetForm();\n      const { data } = await api.post(\"/login\", {\n        email: info.email,\n        username: info.email,\n        password: info.password,\n      });\n      localStorage.setItem(\"token\", data);\n      const res = await api.get(\"/user\");\n      setIsLoggedIn({ login: res.data });\n      if (res.data.isAdmin) {\n        swal({ title: \"Welcome Admin!\", icon: \"success\" });\n      } else {\n        swal({ title: \"Successfully Logged In!\", icon: \"success\" });\n      }\n      window.location.reload();\n    } catch (err) {\n      swal({ title: \"Incorrect Username or Password!\", icon: \"warning\" });\n    }\n    setLoading(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema,\n    onSubmit: login,\n  });\n\n  return (\n    <div style={{ margin: \"1em\" }}>\n      <form onSubmit={formik.handleSubmit} method=\"POST\">\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <div\n            style={{\n              margin: \"1em\",\n              display: \"flex\",\n              alignItems: \"center\",\n              position: \"relative\",\n            }}\n          >\n            <FaUserAlt\n              style={{ position: \"absolute\", bottom: 10 }}\n              color={formik.errors.email ? \"red\" : \"black\"}\n            />\n            <TextField\n              label=\"Username\"\n              id=\"username\"\n              name=\"email\"\n              type=\"email\"\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              error={formik.touched.email && Boolean(formik.errors.email)}\n              helperText={formik.touched.email && formik.errors.email}\n              fullWidth\n              style={{ marginLeft: \"25px\" }}\n            />\n          </div>\n          <div\n            style={{\n              margin: \"1em\",\n              display: \"flex\",\n              alignItems: \"center\",\n              position: \"relative\",\n            }}\n          >\n            <FaLock\n              style={{ position: \"absolute\", bottom: 10 }}\n              color={formik.errors.password ? \"red\" : \"black\"}\n            />\n            <TextField\n              label=\"Password\"\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              error={formik.touched.password && Boolean(formik.errors.password)}\n              helperText={formik.touched.password && formik.errors.password}\n              fullWidth\n              style={{ marginLeft: \"25px\" }}\n            />\n          </div>\n          <ForgotModal />\n\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            className=\"login-btn\"\n            disabled={loading}\n          >\n            Login\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AddForm;\n"]},"metadata":{},"sourceType":"module"}