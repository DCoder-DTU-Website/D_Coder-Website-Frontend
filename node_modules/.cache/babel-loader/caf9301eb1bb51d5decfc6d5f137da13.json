{"ast":null,"code":"var _jsxFileName = \"/home/vaibhav/Documents/Development/D_Coder-Website-Frontend/src/pages/admin/pages/Members/components/NewUserAddCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { PrimaryButton as PrimaryButtonBase } from \"components/misc/Buttons.js\";\nimport api from \"../../../../../api/apiClient\";\nimport swal from \"sweetalert\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { FaUserAlt, FaLock } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div({\n  \"position\": \"relative\",\n  \"paddingLeft\": \"2.5rem\",\n  \"paddingRight\": \"2.5rem\"\n});\nconst Column = styled.div({\n  \"width\": \"100%\",\n  \"maxWidth\": \"28rem\",\n  \"marginLeft\": \"auto\",\n  \"marginRight\": \"auto\",\n  \"@media (min-width: 768px)\": {\n    \"maxWidth\": \"none\",\n    \"marginLeft\": \"0\",\n    \"marginRight\": \"0\"\n  }\n});\nconst TextColumn = styled(Column)(props => [{\n  \"marginTop\": \"4rem\",\n  \"@media (min-width: 768px)\": {\n    \"width\": \"58.333333%\",\n    \"marginTop\": \"0\"\n  }\n}, props.textOnLeft ? {\n  \"@media (min-width: 768px)\": {\n    \"marginRight\": \"3rem\",\n    \"order\": \"-9999\"\n  },\n  \"@media (min-width: 1024px)\": {\n    \"marginRight\": \"4rem\"\n  }\n} : {\n  \"@media (min-width: 768px)\": {\n    \"marginLeft\": \"3rem\",\n    \"order\": \"9999\"\n  },\n  \"@media (min-width: 1024px)\": {\n    \"marginLeft\": \"4rem\"\n  }\n}]);\nconst TextContent = styled.div({\n  \"textAlign\": \"center\",\n  \"@media (min-width: 768px)\": {\n    \"textAlign\": \"left\"\n  },\n  \"@media (min-width: 1024px)\": {\n    \"paddingTop\": \"2rem\",\n    \"paddingBottom\": \"2rem\"\n  }\n});\nconst Form = styled.form({\n  \"marginTop\": \"2rem\",\n  \"fontSize\": \"0.875rem\",\n  \"display\": \"flex\",\n  \"flexDirection\": \"column\",\n  \"maxWidth\": \"24rem\",\n  \"marginLeft\": \"auto\",\n  \"marginRight\": \"auto\",\n  \"@media (min-width: 768px)\": {\n    \"marginTop\": \"2.5rem\",\n    \"marginLeft\": \"0\",\n    \"marginRight\": \"0\"\n  }\n});\nconst Input = styled.input({\n  \"marginTop\": \"1.5rem\",\n  \":first-child\": {\n    \"marginTop\": \"0\"\n  },\n  \"borderBottomWidth\": \"2px\",\n  \"paddingTop\": \"0.75rem\",\n  \"paddingBottom\": \"0.75rem\",\n  \":focus\": {\n    \"outline\": \"2px solid transparent\",\n    \"outlineOffset\": \"2px\"\n  },\n  \"fontWeight\": \"500\",\n  \"transitionProperty\": \"background-color, border-color, color, fill, stroke, opacity, box-shadow, transform\",\n  \"transitionDuration\": \"300ms\",\n  \":hover, :focus\": {\n    \"--border-opacity\": \"1\",\n    \"borderColor\": \"rgba(49, 130, 206, var(--border-opacity))\"\n  }\n});\nconst SubmitButton = styled(PrimaryButtonBase)({\n  \"display\": \"inline-block\",\n  \"textAlign\": \"center\",\n  \"--bg-opacity\": \"1\",\n  \"backgroundColor\": \"rgba(49, 130, 206, var(--bg-opacity))\",\n  \":hover, :focus\": {\n    \"--bg-opacity\": \"1\",\n    \"backgroundColor\": \"rgba(44, 82, 130, var(--bg-opacity))\"\n  }\n});\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().required().label(\"Username\").email(),\n  password: Yup.string().required().label(\"Password\")\n});\n\nconst AddForm = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n\n  const register = async () => {\n    try {\n      setLoading(true);\n      const info = formik.values;\n      formik.resetForm();\n      await api.post(\"/register\", {\n        email: info.email,\n        username: info.email,\n        password: info.password\n      });\n      swal({\n        title: \"Member added Successfully!\",\n        icon: \"success\",\n        buttons: true,\n        closeOnClickOutside: true,\n        closeOnEsc: true\n      });\n      setLoading(false);\n    } catch (err) {\n      console.log(\"Could not register user!\", err);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema,\n    onSubmit: register\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"1em\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      method: \"POST\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"1em\",\n            display: \"flex\",\n            alignItems: \"center\",\n            position: \"relative\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(FaUserAlt, {\n            style: {\n              position: \"absolute\",\n              bottom: 10\n            },\n            color: formik.errors.email ? \"red\" : \"black\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Username\",\n            id: \"username\",\n            name: \"email\",\n            type: \"email\",\n            value: formik.values.email,\n            onChange: formik.handleChange,\n            error: formik.touched.email && Boolean(formik.errors.email),\n            helperText: formik.touched.email && formik.errors.email,\n            fullWidth: true,\n            style: {\n              marginLeft: \"25px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"1em\",\n            display: \"flex\",\n            alignItems: \"center\",\n            position: \"relative\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(FaLock, {\n            style: {\n              position: \"absolute\",\n              bottom: 10\n            },\n            color: formik.errors.password ? \"red\" : \"black\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password\",\n            id: \"password\",\n            name: \"password\",\n            type: \"password\",\n            value: formik.values.password,\n            onChange: formik.handleChange,\n            error: formik.touched.password && Boolean(formik.errors.password),\n            helperText: formik.touched.password && formik.errors.password,\n            fullWidth: true,\n            style: {\n              marginLeft: \"25px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          type: \"submit\",\n          className: \"login-btn\",\n          disabled: loading,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddForm, \"pJ87EHN1dfgLFfg5TTdXt1LPs8E=\", false, function () {\n  return [useFormik];\n});\n\n_c = AddForm;\nexport default AddForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddForm\");","map":{"version":3,"sources":["/home/vaibhav/Documents/Development/D_Coder-Website-Frontend/src/pages/admin/pages/Members/components/NewUserAddCard.js"],"names":["React","useState","styled","PrimaryButton","PrimaryButtonBase","api","swal","TextField","Button","useFormik","Yup","FaUserAlt","FaLock","Container","div","Column","TextColumn","props","textOnLeft","TextContent","Form","form","Input","input","SubmitButton","validationSchema","object","shape","email","string","required","label","password","AddForm","loading","setLoading","register","info","formik","values","resetForm","post","username","title","icon","buttons","closeOnClickOutside","closeOnEsc","err","console","log","initialValues","onSubmit","margin","handleSubmit","display","flexDirection","justifyContent","alignItems","position","bottom","errors","handleChange","touched","Boolean","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport { PrimaryButton as PrimaryButtonBase } from \"components/misc/Buttons.js\";\nimport api from \"../../../../../api/apiClient\";\nimport swal from \"sweetalert\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { FaUserAlt, FaLock } from \"react-icons/fa\";\n\nconst Container = tw.div`relative px-10`;\nconst Column = tw.div`w-full max-w-md mx-auto md:max-w-none md:mx-0`;\nconst TextColumn = styled(Column)((props) => [\n  tw`md:w-7/12 mt-16 md:mt-0`,\n  props.textOnLeft\n    ? tw`md:mr-12 lg:mr-16 md:order-first`\n    : tw`md:ml-12 lg:ml-16 md:order-last`,\n]);\n\nconst TextContent = tw.div`lg:py-8 text-center md:text-left`;\n\nconst Form = tw.form`mt-8 md:mt-10 text-sm flex flex-col max-w-sm mx-auto md:mx-0`;\nconst Input = tw.input`mt-6 first:mt-0 border-b-2 py-3 focus:outline-none font-medium transition duration-300 hocus:border-blue-600`;\n\nconst SubmitButton = tw(\n  PrimaryButtonBase\n)`inline-block text-center bg-blue-600 hocus:bg-blue-800`;\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().required().label(\"Username\").email(),\n  password: Yup.string().required().label(\"Password\"),\n});\n\nconst AddForm = () => {\n  const [loading, setLoading] = useState(false);\n  const register = async () => {\n    try {\n      setLoading(true);\n      const info = formik.values;\n      formik.resetForm();\n      await api.post(\"/register\", {\n        email: info.email,\n        username: info.email,\n        password: info.password,\n      });\n      swal({\n        title: \"Member added Successfully!\",\n        icon: \"success\",\n        buttons: true,\n        closeOnClickOutside: true,\n        closeOnEsc: true,\n      });\n      setLoading(false);\n    } catch (err) {\n      console.log(\"Could not register user!\", err);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema,\n    onSubmit: register,\n  });\n\n  return (\n    <div style={{ margin: \"1em\" }}>\n      <form onSubmit={formik.handleSubmit} method=\"POST\">\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <div\n            style={{\n              margin: \"1em\",\n              display: \"flex\",\n              alignItems: \"center\",\n              position: \"relative\",\n            }}\n          >\n            <FaUserAlt\n              style={{ position: \"absolute\", bottom: 10 }}\n              color={formik.errors.email ? \"red\" : \"black\"}\n            />\n            <TextField\n              label=\"Username\"\n              id=\"username\"\n              name=\"email\"\n              type=\"email\"\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              error={formik.touched.email && Boolean(formik.errors.email)}\n              helperText={formik.touched.email && formik.errors.email}\n              fullWidth\n              style={{ marginLeft: \"25px\" }}\n            />\n          </div>\n          <div\n            style={{\n              margin: \"1em\",\n              display: \"flex\",\n              alignItems: \"center\",\n              position: \"relative\",\n            }}\n          >\n            <FaLock\n              style={{ position: \"absolute\", bottom: 10 }}\n              color={formik.errors.password ? \"red\" : \"black\"}\n            />\n            <TextField\n              label=\"Password\"\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              error={formik.touched.password && Boolean(formik.errors.password)}\n              helperText={formik.touched.password && formik.errors.password}\n              fullWidth\n              style={{ marginLeft: \"25px\" }}\n            />\n          </div>\n\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            className=\"login-btn\"\n            disabled={loading}\n          >\n            Add\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AddForm;\n"]},"metadata":{},"sourceType":"module"}