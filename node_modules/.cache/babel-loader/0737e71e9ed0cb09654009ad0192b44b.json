{"ast":null,"code":"var _jsxFileName = \"/home/vaibhav/Documents/Development/D_Coder-Website-Frontend/src/components/features/ProjectForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport api from \"../../api/apiClient\";\nimport formurlencoded from \"form-urlencoded\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Upload from \"./Upload/Upload\";\nimport swal from \"sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required().max(30).matches(/^[a-z0-9 ]+$/i, \"Project Title must be alpha-numeric.\").label(\"Title\"),\n  desc: Yup.string().required().min(20).max(500).label(\"Description\"),\n  dev: Yup.string().required().max(20).label(\"Owner Name\"),\n  techStack: Yup.string().required().label(\"Tech Stack\"),\n  linkedin: Yup.string().required().label(\"LinkedIn\").matches(new RegExp(\"^https://www.linkedin\\\\.com/in/\"), \"The URL must be a valid Linked In URL.\"),\n  github: Yup.string().required().label(\"Github\").matches(new RegExp(\"^https://github\\\\.com/\"), \"The URL must be a valid Github URL.\")\n});\nexport default function ProjectForm() {\n  _s();\n\n  const classes = useStyles();\n  const [images, setImages] = useState();\n  const [uploading, setUploading] = useState(false);\n\n  const uploadImage = async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", images[0].file);\n      formData.append(\"upload_preset\", \"gekvwtzt\");\n      const res = await axios.post(\"https://api.cloudinary.com/v1_1/dcoderdtu/image/upload\", formData);\n      setImages([]);\n      return res.data.url;\n    } catch (err) {\n      console.error(err, \"Image Upload Failed!\");\n    }\n  };\n\n  const clickSubmit = async () => {\n    try {\n      setUploading(true);\n      let project = formik.values;\n      formik.resetForm();\n      const imageUrl = await uploadImage();\n      project = { ...project,\n        confirmed: false,\n        image: imageUrl\n      };\n      await api.post(\"/project/add\", formurlencoded(project));\n      swal({\n        title: \"Project Uploaded Successfully!\",\n        icon: \"success\",\n        buttons: true,\n        closeOnClickOutside: true,\n        closeOnEsc: true\n      });\n      setUploading(false);\n    } catch (err) {\n      swal({\n        title: \"Not Authorized!\",\n        icon: \"error\",\n        buttons: true,\n        closeOnClickOutside: true,\n        closeOnEsc: true\n      });\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      dev: \"\",\n      desc: \"\",\n      techStack: \"\",\n      linkedin: \"\",\n      github: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: clickSubmit\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.twoColumn,\n      onSubmit: formik.handleSubmit,\n      method: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.column,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textField,\n          label: \"Project Title\",\n          id: \"title\",\n          name: \"title\",\n          value: formik.values.title,\n          onChange: formik.handleChange,\n          error: formik.touched.title && Boolean(formik.errors.title),\n          helperText: formik.touched.title && formik.errors.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textField,\n          label: \"Owner Name\",\n          id: \"dev\",\n          name: \"dev\",\n          value: formik.values.dev,\n          onChange: formik.handleChange,\n          error: formik.touched.dev && Boolean(formik.errors.dev),\n          helperText: formik.touched.dev && formik.errors.dev\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textField,\n          label: \"Tech Stack\",\n          id: \"techStack\",\n          name: \"techStack\",\n          value: formik.values.techStack,\n          onChange: formik.handleChange,\n          error: formik.touched.techStack && Boolean(formik.errors.techStack),\n          helperText: formik.touched.techStack && formik.errors.techStack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textField,\n          label: \"LinkedIn\",\n          id: \"linkedin\",\n          name: \"linkedin\",\n          value: formik.values.linkedin,\n          onChange: formik.handleChange,\n          error: formik.touched.linkedin && Boolean(formik.errors.linkedin),\n          helperText: formik.touched.linkedin && formik.errors.linkedin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textField,\n          label: \"Github\",\n          id: \"github\",\n          name: \"github\",\n          value: formik.values.github,\n          onChange: formik.handleChange,\n          error: formik.touched.github && Boolean(formik.errors.github),\n          helperText: formik.touched.github && formik.errors.github\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.column,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textField,\n          label: \"Description\",\n          id: \"desc\",\n          name: \"desc\",\n          value: formik.values.desc,\n          onChange: formik.handleChange,\n          error: formik.touched.desc && Boolean(formik.errors.desc),\n          helperText: formik.touched.desc && formik.errors.desc,\n          multiline: true,\n          rows: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Upload, {\n          images: images,\n          setImages: setImages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.textField && classes.button,\n          variant: \"contained\",\n          type: \"submit\",\n          disabled: uploading,\n          children: uploading ? \"Uploading...\" : \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProjectForm, \"cA3vyqiJFgqnCBTLEkB/F9kmbUc=\", false, function () {\n  return [useStyles, useFormik];\n});\n\n_c = ProjectForm;\nconst useStyles = makeStyles({\n  container: {\n    position: \"relative\",\n    padding: \"0 2.5rem\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  twoColumn: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    margin: \"0 auto\",\n    width: \"100%\",\n    height: \"100%\",\n    \"@media (max-width: 900px)\": {\n      flexDirection: \"column\"\n    }\n  },\n  column: {\n    width: \"50%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    \"@media (max-width: 900px)\": {\n      width: \"100%\"\n    }\n  },\n  textField: {\n    margin: \"2rem\",\n    width: \"75%\",\n    \"@media (max-width: 900px)\": {\n      width: \"100%\"\n    }\n  },\n  button: {\n    margin: \"2rem\",\n    width: \"75%\",\n    backgroundColor: \"#3182ce\",\n    color: \"white \",\n    \"&:hover\": {\n      backgroundColor: \"#2c5282\"\n    }\n  }\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectForm\");","map":{"version":3,"sources":["/home/vaibhav/Documents/Development/D_Coder-Website-Frontend/src/components/features/ProjectForm.js"],"names":["React","useState","axios","api","formurlencoded","makeStyles","TextField","Button","useFormik","Yup","Upload","swal","validationSchema","object","shape","title","string","required","max","matches","label","desc","min","dev","techStack","linkedin","RegExp","github","ProjectForm","classes","useStyles","images","setImages","uploading","setUploading","uploadImage","formData","FormData","append","file","res","post","data","url","err","console","error","clickSubmit","project","formik","values","resetForm","imageUrl","confirmed","image","icon","buttons","closeOnClickOutside","closeOnEsc","initialValues","onSubmit","container","twoColumn","handleSubmit","column","textField","handleChange","touched","Boolean","errors","button","position","padding","width","height","display","flexDirection","justifyContent","alignItems","margin","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport api from \"../../api/apiClient\";\nimport formurlencoded from \"form-urlencoded\";\n\nimport { makeStyles } from \"@material-ui/styles\";\n\nimport { TextField, Button } from \"@material-ui/core\";\n\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Upload from \"./Upload/Upload\";\n\nimport swal from \"sweetalert\";\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string()\n    .required()\n    .max(30)\n    .matches(/^[a-z0-9 ]+$/i, \"Project Title must be alpha-numeric.\")\n    .label(\"Title\"),\n  desc: Yup.string().required().min(20).max(500).label(\"Description\"),\n  dev: Yup.string().required().max(20).label(\"Owner Name\"),\n  techStack: Yup.string().required().label(\"Tech Stack\"),\n  linkedin: Yup.string()\n    .required()\n    .label(\"LinkedIn\")\n    .matches(\n      new RegExp(\"^https://www.linkedin\\\\.com/in/\"),\n      \"The URL must be a valid Linked In URL.\"\n    ),\n  github: Yup.string()\n    .required()\n    .label(\"Github\")\n    .matches(\n      new RegExp(\"^https://github\\\\.com/\"),\n      \"The URL must be a valid Github URL.\"\n    ),\n});\n\nexport default function ProjectForm() {\n  const classes = useStyles();\n  const [images, setImages] = useState();\n  const [uploading, setUploading] = useState(false);\n\n  const uploadImage = async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", images[0].file);\n      formData.append(\"upload_preset\", \"gekvwtzt\");\n      const res = await axios.post(\n        \"https://api.cloudinary.com/v1_1/dcoderdtu/image/upload\",\n        formData\n      );\n      setImages([]);\n      return res.data.url;\n    } catch (err) {\n      console.error(err, \"Image Upload Failed!\");\n    }\n  };\n\n  const clickSubmit = async () => {\n    try {\n      setUploading(true);\n      let project = formik.values;\n      formik.resetForm();\n      const imageUrl = await uploadImage();\n      project = { ...project, confirmed: false, image: imageUrl };\n      await api.post(\"/project/add\", formurlencoded(project));\n      swal({\n        title: \"Project Uploaded Successfully!\",\n        icon: \"success\",\n        buttons: true,\n        closeOnClickOutside: true,\n        closeOnEsc: true,\n      });\n      setUploading(false);\n    } catch (err) {\n      swal({\n        title: \"Not Authorized!\",\n        icon: \"error\",\n        buttons: true,\n        closeOnClickOutside: true,\n        closeOnEsc: true,\n      });\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      dev: \"\",\n      desc: \"\",\n      techStack: \"\",\n      linkedin: \"\",\n      github: \"\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: clickSubmit,\n  });\n\n  return (\n    <div className={classes.container}>\n      <form\n        className={classes.twoColumn}\n        onSubmit={formik.handleSubmit}\n        method=\"POST\"\n      >\n        <div className={classes.column}>\n          <TextField\n            className={classes.textField}\n            label=\"Project Title\"\n            id=\"title\"\n            name=\"title\"\n            value={formik.values.title}\n            onChange={formik.handleChange}\n            error={formik.touched.title && Boolean(formik.errors.title)}\n            helperText={formik.touched.title && formik.errors.title}\n          />\n          <TextField\n            className={classes.textField}\n            label=\"Owner Name\"\n            id=\"dev\"\n            name=\"dev\"\n            value={formik.values.dev}\n            onChange={formik.handleChange}\n            error={formik.touched.dev && Boolean(formik.errors.dev)}\n            helperText={formik.touched.dev && formik.errors.dev}\n          />\n          <TextField\n            className={classes.textField}\n            label=\"Tech Stack\"\n            id=\"techStack\"\n            name=\"techStack\"\n            value={formik.values.techStack}\n            onChange={formik.handleChange}\n            error={formik.touched.techStack && Boolean(formik.errors.techStack)}\n            helperText={formik.touched.techStack && formik.errors.techStack}\n          />\n          <TextField\n            className={classes.textField}\n            label=\"LinkedIn\"\n            id=\"linkedin\"\n            name=\"linkedin\"\n            value={formik.values.linkedin}\n            onChange={formik.handleChange}\n            error={formik.touched.linkedin && Boolean(formik.errors.linkedin)}\n            helperText={formik.touched.linkedin && formik.errors.linkedin}\n          />\n          <TextField\n            className={classes.textField}\n            label=\"Github\"\n            id=\"github\"\n            name=\"github\"\n            value={formik.values.github}\n            onChange={formik.handleChange}\n            error={formik.touched.github && Boolean(formik.errors.github)}\n            helperText={formik.touched.github && formik.errors.github}\n          />\n        </div>\n        <div className={classes.column}>\n          <TextField\n            className={classes.textField}\n            label=\"Description\"\n            id=\"desc\"\n            name=\"desc\"\n            value={formik.values.desc}\n            onChange={formik.handleChange}\n            error={formik.touched.desc && Boolean(formik.errors.desc)}\n            helperText={formik.touched.desc && formik.errors.desc}\n            multiline\n            rows={8}\n          />\n          <Upload images={images} setImages={setImages} />\n          <Button\n            className={classes.textField && classes.button}\n            variant=\"contained\"\n            type=\"submit\"\n            disabled={uploading}\n          >\n            {uploading ? \"Uploading...\" : \"Upload\"}\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles({\n  container: {\n    position: \"relative\",\n    padding: \"0 2.5rem\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  twoColumn: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    margin: \"0 auto\",\n    width: \"100%\",\n    height: \"100%\",\n    \"@media (max-width: 900px)\": {\n      flexDirection: \"column\",\n    },\n  },\n  column: {\n    width: \"50%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    \"@media (max-width: 900px)\": {\n      width: \"100%\",\n    },\n  },\n  textField: {\n    margin: \"2rem\",\n    width: \"75%\",\n    \"@media (max-width: 900px)\": {\n      width: \"100%\",\n    },\n  },\n  button: {\n    margin: \"2rem\",\n    width: \"75%\",\n    backgroundColor: \"#3182ce\",\n    color: \"white \",\n    \"&:hover\": {\n      backgroundColor: \"#2c5282\",\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}